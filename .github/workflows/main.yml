name: PyInstaller Windows Release

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Use PyInstaller to freeze the program
      - name: PyInstaller Windows
        uses: JackMcKew/pyinstaller-action-windows@v0.1.2
        with:
          path: ./
          requirements: ./requirements.txt
          spec: ./LevelSync.spec

      # Zip up the exe with the config and readme
      - uses: papeloto/action-zip@v1
        with:
          files: ./dist/windows/LevelSync.exe ./config.ini ./README.md
          dest: ./LevelSync.zip

      # Create a draft release
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: <tofill>
          release_name: <tofill>
          draft: true
          prerelease: false

      # Upload file to the release
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./LevelSync.zip
          asset_name: LevelSync.zip
          asset_content_type: application/zip

      # Create and upload an artifact for testing purposes
      - uses: actions/upload-artifact@v2
        with:
          name: LevelSync
          path: ./LevelSync.zip

